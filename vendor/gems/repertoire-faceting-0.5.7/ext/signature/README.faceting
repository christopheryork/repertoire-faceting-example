--
--
-- In-database support for Repertoire faceting module.
--
-- These libraries add scalable faceted indexing to the PostgreSQL database.
--
-- Basic approach is similar to other faceted browsers (Solr, Exhibit): an inverted bitmap index
-- allows fast computation of facet value counts, given a base context and prior facet refinements.
-- Bitsets can also be used to compute the result set of items.
--
-- There are two bindings for the API. The first extends PostgreSQL with a new bitset datatype
-- written in C (called 'signature'). This version provides scaleable faceting up to 1,000,000 items
-- and beyond, but requires control over the PostgreSQL server instance to build and load the C
-- extensions.
--
-- The second is implemented using PostgreSQL's built-in BIT data type, and scales to a hard limit
-- of 100,000 items. It works in exactly the same way as the 'signature' data type above, but is
-- about a factor of 5-10 slower. However, it does not require administrative control over the 
-- database server to install or use and so is suited to shared host deployment (e.g. Heroku).
-- 
-- Both bindings of the API are identical, and consist of:
--
--   (a) functions for accessing the bitset data types. These are used to store inverted indices from
--   facet values to item ids. Functions are provided for doing refinements and counts on items
--   with a given facet value.
--
--   (b) facilities for adding a packed (continuous) id sequence to the main item table.  Packed ids
--   are used in the facet value indexes.
--
--   (c) utility functions for creating/updating packed ids and facet value index tables, e.g. in
--   a crontab task.
--








-- The code can be installed in two way. When loaded as a PostgreSQL 9.0 extension 
-- ("CREATE EXTENSION FACETING"), both API bindings are available. The native C signature datatype
-- is used by default, and the PostgreSQL BIT API is available in a separate schema. (This facilitates
-- profiling and comparison between the two approaches.)
--
-- Conversely, when loaded by hand (via 'builtin/install.sql' and 'builtin/uninstall.sql'),
-- only the BIT-based API is available. This is suitable for shared hosts where CREATE EXTENSION
-- is not authorized.
--
-- Installation
--
--    (1) gem install repertoire-faceting
--    (2) rake db:faceting:install
--    (3) rake db:faceting:load
--
-- The native bitset PostgreSQL extension follows standards for C-language extensions:
--  http://www.postgresql.org/docs/current/static/xfunc-c.html
--
